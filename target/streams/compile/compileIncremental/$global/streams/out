[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/yxwang/PracticeProjects/scalaseedproject/src/main/scala/example/Hello.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/CalculatorClient.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/IOTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/TraitTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/EnumTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/ByNameTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/MatchTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/ImplicitTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/Hello.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/ClassTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/ForTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/CurryTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/TypeClassTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/ListTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/Users/yxwang/PracticeProjects/scalaseedproject/target/scala-2.12/classes/example/Greeting.class, /Users/yxwang/PracticeProjects/scalaseedproject/target/scala-2.12/classes/example/Hello$.class, /Users/yxwang/PracticeProjects/scalaseedproject/target/scala-2.12/classes/example/Hello$delayedInit$body.class, /Users/yxwang/PracticeProjects/scalaseedproject/target/scala-2.12/classes/example/Hello.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(example.Hello, example.Greeting)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/Users/yxwang/PracticeProjects/scalaseedproject/src/main/scala/example/Hello.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(example.Hello, example.Greeting)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/CalculatorClient.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/IOTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/TraitTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/EnumTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/ByNameTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/MatchTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/ImplicitTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/Hello.scala, /Users/yxwang/PracticeProjects/scalaseedproject/src/main/scala/example/Hello.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/ClassTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/ForTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/CurryTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/TypeClassTest.scala, /Users/yxwang/PracticeProjects/scala-seed-project/src/main/scala/example/ListTest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 13 sources: invalidated sources (14) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 13 Scala sources to /Users/yxwang/PracticeProjects/scala-seed-project/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 7527c5b8 for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/yxwang/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/yxwang/PracticeProjects/scala-seed-project/target/scala-2.12/classes[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 6.343155399 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Ant...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Ant)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Ant)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Ant,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(example;Ant;init;,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(env,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(Ant,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(range,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.Ant has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(example;Ant;init;,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(env,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(Ant,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(range,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Ant)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.CurryTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.CurryTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.CurryTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.CurryTest,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(CurryTest,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.CurryTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(CurryTest,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.CurryTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.EnumTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.EnumTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.EnumTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.EnumTest,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(EnumTest,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.EnumTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(EnumTest,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.EnumTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Empty...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Empty)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Empty)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Empty,ModifiedNames(changes = UsedName(Empty,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(headOption,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productElement,[Default]), UsedName(exists2,[Default]), UsedName(canEqual,[Default]), UsedName(asInstanceOf,[Default]), UsedName(exists,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(foldRight,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.Empty has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Empty,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(headOption,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productElement,[Default]), UsedName(exists2,[Default]), UsedName(canEqual,[Default]), UsedName(asInstanceOf,[Default]), UsedName(exists,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(foldRight,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Empty)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Logger...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Logger)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.AbsSavingsAccount by example.Logger[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.ConsoleLogger by example.Logger[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.ShortLogger by example.ConsoleLogger[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.SavingsAccount by example.ConsoleLogger[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.TimestampLogger by example.ConsoleLogger[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.AbsTimestampLogger by example.Logger[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Logger, example.AbsTimestampLogger, example.AbsSavingsAccount, example.ConsoleLogger, example.SavingsAccount, example.ShortLogger, example.TimestampLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: example.AbsTimestampLogger -> Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: example.SavingsAccount -> Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Logger,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Logger,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 8 classes due to The example.Logger has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Logger,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Logger, example.AbsTimestampLogger, example.AbsSavingsAccount, example.ConsoleLogger, example.SavingsAccount, example.ShortLogger, example.TimestampLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by local inheritance: Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.ByNameTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.ByNameTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.ByNameTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.ByNameTest,ModifiedNames(changes = UsedName(testExistAndFold,[Default]), UsedName($isInstanceOf,[Default]), UsedName(judgeRealExpensive,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(expensive,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(testRunTwice,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(testRunOnceWithSmarterCons,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(testSumVarargs,[Default]), UsedName(notify,[Default]), UsedName(ByNameTest,[Default]), UsedName(!=,[Default]), UsedName(sum,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.ByNameTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(testExistAndFold,[Default]), UsedName($isInstanceOf,[Default]), UsedName(judgeRealExpensive,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(expensive,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(testRunTwice,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(testRunOnceWithSmarterCons,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(testSumVarargs,[Default]), UsedName(notify,[Default]), UsedName(ByNameTest,[Default]), UsedName(!=,[Default]), UsedName(sum,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.ByNameTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Ant2...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Ant2)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Ant2)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Ant2,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(example;Ant2;init;,[Default]), UsedName(env,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Ant2,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(range,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.Ant2 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(example;Ant2;init;,[Default]), UsedName(env,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Ant2,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(range,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Ant2)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.EndNode...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.EndNode)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.EndNode)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.EndNode,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(example;EndNode;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productElement,[Default]), UsedName(canEqual,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(EndNode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.EndNode has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(example;EndNode;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productElement,[Default]), UsedName(canEqual,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(EndNode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.EndNode)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.ErrorResponse...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.ErrorResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.ErrorResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.ErrorResponse,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(input,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productElement,[Default]), UsedName(canEqual,[Default]), UsedName(example;ErrorResponse;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ErrorResponse,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(error,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.ErrorResponse has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(input,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productElement,[Default]), UsedName(canEqual,[Default]), UsedName(example;ErrorResponse;init;,[Default]), UsedName(copy$default$1,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ErrorResponse,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(error,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.ErrorResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.TraitTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.TraitTest,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(TraitTest,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.TraitTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(TraitTest,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Show...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Show)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Show)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: example.Show -> Set(example.ResponseInstances)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Show,ModifiedNames(changes = UsedName(Show,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(show,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 2 classes due to The example.Show has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Show,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(show,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Show)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by local inheritance: Set(example.ResponseInstances)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.ForTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.ForTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.ForTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.ForTest,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(richForLoop,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(richForLoop2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(mapReplaceFor2,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(ForTest,[Default]), UsedName(notify,[Default]), UsedName(originForLoop,[Default]), UsedName(!=,[Default]), UsedName(mapReplaceFor,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.ForTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(richForLoop,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(richForLoop2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(mapReplaceFor2,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(ForTest,[Default]), UsedName(notify,[Default]), UsedName(originForLoop,[Default]), UsedName(!=,[Default]), UsedName(mapReplaceFor,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.ForTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Person...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Person)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.Employee by example.Person[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Person, example.Employee)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Person,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(example;Person;init;,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(description,[Default]), UsedName(isInstanceOf,[Default]), UsedName(age,[Default]), UsedName(Person,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 2 classes due to The example.Person has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(example;Person;init;,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(description,[Default]), UsedName(isInstanceOf,[Default]), UsedName(age,[Default]), UsedName(Person,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Person, example.Employee)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.ImplicitTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.ImplicitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.ImplicitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.ImplicitTest,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(f2,[Default]), UsedName(f,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ImplicitTest,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(f3,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.ImplicitTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(f2,[Default]), UsedName(f,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ImplicitTest,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(f3,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.ImplicitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.IO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.IO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.IO,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(flatMap,[Default]), UsedName(map,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(example;IO;init;,[Default]), UsedName(equals,[Default]), UsedName(run,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.IO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(IO,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(flatMap,[Default]), UsedName(map,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(example;IO;init;,[Default]), UsedName(equals,[Default]), UsedName(run,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.IO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Creature...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Creature)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.Ant by example.Creature[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.Ant2 by example.Creature[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Creature, example.Ant, example.Ant2)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Creature,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(example;Creature;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(env,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(Creature,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(range,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 3 classes due to The example.Creature has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(example;Creature;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(env,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(Creature,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(range,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Creature, example.Ant, example.Ant2)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.ListTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.ListTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.ListTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.ListTest,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(myFold,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(ListTest,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.ListTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(myFold,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(ListTest,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.ListTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.SavingsAccount...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.SavingsAccount)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.SavingsAccount)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: example.SavingsAccount -> Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.SavingsAccount,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(withdraw,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(example;SavingsAccount;init;,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(SavingsAccount,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 2 classes due to The example.SavingsAccount has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(withdraw,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(example;SavingsAccount;init;,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(SavingsAccount,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.SavingsAccount)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by local inheritance: Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Response...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Response)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.RightResponse by example.Response[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.ErrorResponse by example.Response[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.ErrorResponse, example.Response, example.RightResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Response,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(Response,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 3 classes due to The example.Response has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(Response,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.ErrorResponse, example.Response, example.RightResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.TrafficLightColor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.TrafficLightColor)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.TrafficLightColor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.TrafficLightColor,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(Red,[Default]), UsedName(getClass,[Default]), UsedName(readResolve,[Default]), UsedName(nextName,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(maxId,[Default]), UsedName(Val,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(TrafficLightColor,[Default]), UsedName(Green,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(nextId,[Default]), UsedName(ValueSet,[Default]), UsedName(ValueOrdering,[Default]), UsedName(Other,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(Yellow,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(withName,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(Value,[Default]), UsedName(equals,[Default]), UsedName(values,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.TrafficLightColor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(Red,[Default]), UsedName(getClass,[Default]), UsedName(readResolve,[Default]), UsedName(nextName,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(maxId,[Default]), UsedName(Val,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(TrafficLightColor,[Default]), UsedName(Green,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(nextId,[Default]), UsedName(ValueSet,[Default]), UsedName(ValueOrdering,[Default]), UsedName(Other,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(Yellow,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(withName,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(Value,[Default]), UsedName(equals,[Default]), UsedName(values,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.TrafficLightColor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Node...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Node,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productElement,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(asInstanceOf,[Default]), UsedName(example;Node;init;,[Default]), UsedName(Node,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(next,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(v,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.Node has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productElement,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(asInstanceOf,[Default]), UsedName(example;Node;init;,[Default]), UsedName(Node,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(next,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(v,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.AbsSavingsAccount...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.AbsSavingsAccount)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.AbsSavingsAccount)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.AbsSavingsAccount,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(AbsSavingsAccount,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(withdraw,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(example;AbsSavingsAccount;init;,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.AbsSavingsAccount has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(AbsSavingsAccount,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(withdraw,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(example;AbsSavingsAccount;init;,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.AbsSavingsAccount)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.MyList...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.MyList)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.EndNode by example.MyList[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.Node by example.MyList[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.MyList, example.EndNode, example.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.MyList,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(MyList,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 3 classes due to The example.MyList has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(MyList,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.MyList, example.EndNode, example.Node)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Employee...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Employee)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Employee)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Employee,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(example;Employee;init;,[Default]), UsedName(finalize,[Default]), UsedName(Employee,[Default]), UsedName(ne,[Default]), UsedName(description,[Default]), UsedName(isInstanceOf,[Default]), UsedName(age,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.Employee has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(example;Employee;init;,[Default]), UsedName(finalize,[Default]), UsedName(Employee,[Default]), UsedName(ne,[Default]), UsedName(description,[Default]), UsedName(isInstanceOf,[Default]), UsedName(age,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Employee)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.CalculatorClient...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.CalculatorClient)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.CalculatorClient)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.CalculatorClient,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(args,[Default]), UsedName(division,[Default]), UsedName(delayedInit,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(complexCal,[Default]), UsedName(asInstanceOf,[Default]), UsedName(executionStart,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(CalculatorClient,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.CalculatorClient has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(args,[Default]), UsedName(division,[Default]), UsedName(delayedInit,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(complexCal,[Default]), UsedName(asInstanceOf,[Default]), UsedName(executionStart,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(CalculatorClient,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.CalculatorClient)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.RightResponse...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.RightResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.RightResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.RightResponse,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(RightResponse,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(example;RightResponse;init;,[Default]), UsedName(productElement,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(result,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.RightResponse has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(RightResponse,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(example;RightResponse;init;,[Default]), UsedName(productElement,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(result,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.RightResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.TypeClassTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.TypeClassTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.TypeClassTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.TypeClassTest,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(division,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(TypeClassTest,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.TypeClassTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(division,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(TypeClassTest,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.TypeClassTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Calculator...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Calculator)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.CalculatorClient by example.Calculator[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Calculator, example.CalculatorClient)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Calculator,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(division,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(complexCal,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Calculator,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 2 classes due to The example.Calculator has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(division,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(complexCal,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Calculator,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Calculator, example.CalculatorClient)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.IOTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.IOTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.IOTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.IOTest,ModifiedNames(changes = UsedName(IOTest,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(add,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.IOTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(IOTest,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(add,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.IOTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.ShortLogger...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.ShortLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.ShortLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.ShortLogger,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(ShortLogger,[Default]), UsedName(maxLength,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.ShortLogger has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(ShortLogger,[Default]), UsedName(maxLength,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.ShortLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Stream...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Stream)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.Empty by example.Stream[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.Cons by example.Stream[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Stream, example.Empty, example.Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Stream,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(headOption,[Default]), UsedName(cons,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Stream,[Default]), UsedName(exists2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(exists,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(empty,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(foldRight,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 3 classes due to The example.Stream has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(headOption,[Default]), UsedName(cons,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Stream,[Default]), UsedName(exists2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(apply,[Default]), UsedName(exists,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(empty,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(foldRight,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Stream, example.Empty, example.Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.Cons...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.Cons,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(headOption,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productElement,[Default]), UsedName(exists2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(asInstanceOf,[Default]), UsedName(exists,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(h,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(t,[Default]), UsedName(!=,[Default]), UsedName(example;Cons;init;,[Default]), UsedName(toString,[Default]), UsedName(foldRight,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(Cons,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.Cons has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(copy,[Default]), UsedName(headOption,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productElement,[Default]), UsedName(exists2,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(asInstanceOf,[Default]), UsedName(exists,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(h,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(copy$default$2,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(t,[Default]), UsedName(!=,[Default]), UsedName(example;Cons;init;,[Default]), UsedName(toString,[Default]), UsedName(foldRight,[Default]), UsedName(equals,[Default]), UsedName(productPrefix,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(Cons,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.Cons)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.ClassTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.ClassTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.ClassTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.ClassTest,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ClassTest,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.ClassTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ClassTest,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.ClassTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.ResponseInstances...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.ResponseInstances)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.ResponseInstances)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.ResponseInstances,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(intShowInstance,[Implicit]), UsedName(ResponseInstances,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(responseShowInstance,[Implicit]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.ResponseInstances has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(intShowInstance,[Implicit]), UsedName(responseShowInstance,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.ResponseInstances)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.AbsTimestampLogger...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.AbsTimestampLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.AbsTimestampLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: example.AbsTimestampLogger -> Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.AbsTimestampLogger,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(AbsTimestampLogger,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 2 classes due to The example.AbsTimestampLogger has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(AbsTimestampLogger,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.AbsTimestampLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by local inheritance: Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.ShowSyntax...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.ShowSyntax)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.ShowSyntax)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.ShowSyntax,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(ShowSyntax,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(ShowOps,[Implicit]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.ShowSyntax has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ShowOps,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.ShowSyntax)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.MatchTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.MatchTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.MatchTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.MatchTest,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(MatchTest,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.MatchTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(MatchTest,[Default]), UsedName(asInstanceOf,[Default]), UsedName(main,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.MatchTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.TimestampLogger...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.TimestampLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.TimestampLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.TimestampLogger,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(TimestampLogger,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.TimestampLogger has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(TimestampLogger,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.TimestampLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.ShowSyntax.ShowOps...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.ShowSyntax.ShowOps)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.ShowSyntax.ShowOps)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.ShowSyntax.ShowOps,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(example;ShowSyntax;ShowOps;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(show,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(ShowOps,[Implicit]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 1 classes due to The example.ShowSyntax.ShowOps has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(ShowOps,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.ShowSyntax.ShowOps)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from example.ConsoleLogger...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(example.ConsoleLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.ShortLogger by example.ConsoleLogger[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.SavingsAccount by example.ConsoleLogger[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding example.TimestampLogger by example.ConsoleLogger[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(example.TimestampLogger, example.ConsoleLogger, example.SavingsAccount, example.ShortLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidate by local inheritance: example.SavingsAccount -> Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(example.ConsoleLogger,ModifiedNames(changes = UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ConsoleLogger,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]))) invalidates 5 classes due to The example.ConsoleLogger has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ConsoleLogger,[Default]), UsedName(finalize,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(log,[Default]), UsedName(!=,[Default]), UsedName(toString,[Default]), UsedName(equals,[Default]), UsedName(notifyAll,[Default]), UsedName(clone,[Default]), UsedName(eq,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(example.TimestampLogger, example.ConsoleLogger, example.SavingsAccount, example.ShortLogger)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by local inheritance: Set(example.TraitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
